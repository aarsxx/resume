---
import clsx from 'clsx';
import Text from './Text.astro';
import Title from './Title.astro';
import HStack from './HStack.astro';
import Badge from './Badge.astro';
import List from './List.astro';

interface Props {
  title: string;
  attributes?: string[];
  subTitle?: string;
  startPeriod: string;
  endPeriod: string;
  url: string;
  activities: string[] | string;
  class?: string;
}

const {
  class: className,
  title,
  attributes = [],
  subTitle,
  startPeriod,
  endPeriod,
  url,
  activities,
  ...rest
} = Astro.props;
---

<article class={clsx([className, 'w-full'])} {...rest}>
  <HStack
    class="w-full mb-1"
    horizontalAlign="space-between"
    verticalAlign="end"
  >
    <a
      class="hover:underline"
      href={url}
      target="_blank"
      rel="noopener noreferrer"
    >
      <Title level="item" text={title} />
    </a>

    <Text size="lg" text={`${startPeriod} - ${endPeriod}`} />
  </HStack>

  {subTitle && <Title level="subitem" text={subTitle} />}

  {
    // Display attributes only if there are any
    attributes.length > 0 && (
      <HStack gap="1" wrap class="my-2">
        {attributes.map((item) => (
          <Badge text={item} />
        ))}
      </HStack>
    )
  }

  {
    typeof activities === 'string' ? (
      <Text text={activities} />
    ) : (
      <List items={activities} />
    )
  }
</article>
